services:
  postgres:
    image: postgres:16
    container_name: finance-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: finance
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./configs/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d finance"]
      interval: 3s
      timeout: 3s
      retries: 10

  api:
    build: .
    container_name: finance-api
    environment:
      DB_DSN: postgres://postgres:admin@postgres:5432/finance?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC_TRANSACTIONS: transactions.created
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    
  kafka:
    image: bitnami/kafka:3.7
    container_name: finance-kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: finance-kafka-ui
    ports: ["8082:8080"]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on: [kafka]

  adminer:
    image: adminer:4
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  db_data: {}
