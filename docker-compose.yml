services:
  postgres:
    image: postgres:16
    container_name: finance-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: finance
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./configs/sql:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d finance"]
      interval: 3s
      timeout: 3s
      retries: 10

  api:
    build: .
    container_name: finance-api
    environment:
      DB_DSN: postgres://postgres:admin@postgres:5432/finance?sslmode=disable
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC_TRANSACTIONS: transactions.created
      JWT_SECRET: "stone-secreta"
      JWT_ISS: "finance-api"
      JWT_AUD: "finance-api"
      JWT_ACCESS_TTL: "15m"

    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"

  kafka:
    image: bitnami/kafka:3.7
    container_name: finance-kafka
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true # DEV ONLY
      - ALLOW_PLAINTEXT_LISTENER=yes
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/bitnami/kafka # <-- persiste dados/tÃ³picos
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1",
        ]
      interval: 10s
      timeout: 5s
      retries: 12

  kafka-init:
    image: bitnami/kafka:3.7
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/opt/bitnami/kafka/bin/kafka-topics.sh"]
    command:
      [
        "--bootstrap-server",
        "kafka:9092",
        "--create",
        "--if-not-exists",
        "--topic",
        "transactions.created",
        "--partitions",
        "1",
        "--replication-factor",
        "1",
      ]
    restart: "no"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: finance-kafka-ui
    ports: ["8082:8080"]
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on: [kafka]

  adminer:
    image: adminer:4
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: finance-prometheus
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:11.1.4
    container_name: finance-grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  db_data: {}
  kafka_data: {}
